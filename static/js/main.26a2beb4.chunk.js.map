{"version":3,"sources":["Components/Square.js","Components/Board.js","Components/Game.js","App.js","index.js"],"names":["Square","ele","id","clickFunction","className","onClick","Board","arr","map","idx","Game","useState","xTurn","setXTurn","Array","fill","vals","setVals","message","setMessage","winner","setWinner","checkWinner","p","q","r","a","b","c","newArr","newMessage","flag","forEach","x","isDraw","console","log","w","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAUeA,MARf,YAA6C,IAA3BC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,cAC1B,OACC,wBAAQC,UAAU,YAAYC,QAAS,kBAAMF,EAAcD,IAA3D,SACED,KCQWK,MAVf,YAAwC,IAAvBC,EAAsB,EAAtBA,IAAKJ,EAAiB,EAAjBA,cACrB,OACC,qBAAKC,UAAU,iBAAf,SACEG,EAAIC,KAAI,SAACP,EAAKQ,GAAN,OACR,cAAC,EAAD,CAAkBR,IAAKA,EAAKC,GAAIO,EAAKN,cAAeA,GAAvCM,SCsEFC,MA1Ef,WAAiB,IAAD,EACWC,oBAAS,GADpB,mBACRC,EADQ,KACDC,EADC,OAESF,mBAASG,MAAM,GAAGC,KAAK,OAFhC,mBAERC,EAFQ,KAEFC,EAFE,OAGeN,mBAAS,YAHxB,mBAGRO,EAHQ,KAGCC,EAHD,OAIaR,mBAAS,MAJtB,mBAIRS,EAJQ,KAIAC,EAJA,KAMXC,EAAc,WAYjB,IAXA,IAWA,MAXwB,CACvB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGR,eAAyC,CAAC,IAAD,sBAA7BC,EAA6B,KAA1BC,EAA0B,KAAvBC,EAAuB,KACpCC,EAAIV,EAAKO,GACTI,EAAIX,EAAKQ,GACTI,EAAIZ,EAAKS,GAEb,GAAU,OAANC,GAAcA,IAAMC,GAAKA,IAAMC,EAAG,OAAOF,EAG9C,OAAO,MAsCR,OACC,qCACC,8BACC,cAAC,EAAD,CAAOnB,IAAKS,EAAMb,cA5BD,SAACM,GACpB,GAAiB,MAAbO,EAAKP,IAA0B,MAAVW,EAAzB,CAEA,IAAIS,EAASb,EACba,EAAOpB,GAAOG,EAAQ,IAAM,IAC5B,IAAIkB,EAAalB,EAAQ,WAAa,WAMtC,GAJAK,EAAQ,YAAIY,IACZhB,GAAUD,GACVO,EAAWW,GAnBC,WACZ,IAAIC,GAAO,EAMX,OALAf,EAAKgB,SAAQ,SAACC,GACH,OAANA,IACHF,GAAO,MAGFA,EAcHG,GACHC,QAAQC,IAAI,eACZjB,EAAW,cACL,GAAqB,MAAjBG,IAAuB,CAEjCa,QAAQC,IAAI,gBACZ,IAAIC,EAAIf,IACRD,EAAUgB,GAEKlB,EAAL,MAANkB,EAAsB,mBACV,0BAShB,6BAAKnB,Q,MC1DOoB,MATf,WACE,OACE,gCACE,6CACA,cAAC,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.26a2beb4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Square({ ele, id, clickFunction }) {\n\treturn (\n\t\t<button className=\"grid-item\" onClick={() => clickFunction(id)}>\n\t\t\t{ele}\n\t\t</button>\n\t);\n}\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Square\";\n\nfunction Board({ arr, clickFunction }) {\n\treturn (\n\t\t<div className=\"grid-container\">\n\t\t\t{arr.map((ele, idx) => (\n\t\t\t\t<Square key={idx} ele={ele} id={idx} clickFunction={clickFunction} />\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Board;\n","import React, { useState } from \"react\";\nimport Board from \"./Board\";\n\nfunction Game() {\n\tconst [xTurn, setXTurn] = useState(true);\n\tconst [vals, setVals] = useState(Array(9).fill(null));\n\tconst [message, setMessage] = useState(\"X's turn\");\n\tconst [winner, setWinner] = useState(null);\n\n\tlet checkWinner = () => {\n\t\tconst winningPatterns = [\n\t\t\t[0, 1, 2],\n\t\t\t[3, 4, 5],\n\t\t\t[6, 7, 8],\n\t\t\t[0, 3, 6],\n\t\t\t[1, 4, 7],\n\t\t\t[2, 5, 8],\n\t\t\t[0, 4, 8],\n\t\t\t[2, 4, 6],\n\t\t];\n\n\t\tfor (const [p, q, r] of winningPatterns) {\n\t\t\tlet a = vals[p];\n\t\t\tlet b = vals[q];\n\t\t\tlet c = vals[r];\n\n\t\t\tif (a !== null && a === b && b === c) return a;\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tlet isDraw = () => {\n\t\tlet flag = true;\n\t\tvals.forEach((x) => {\n\t\t\tif (x === null) {\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t});\n\t\treturn flag;\n\t};\n\n\tlet clickFunction = (idx) => {\n\t\tif (vals[idx] != null || winner != null) return;\n\n\t\tlet newArr = vals;\n\t\tnewArr[idx] = xTurn ? \"X\" : \"O\";\n\t\tlet newMessage = xTurn ? \"O's Turn\" : \"X's Turn\";\n\n\t\tsetVals([...newArr]);\n\t\tsetXTurn(!xTurn);\n\t\tsetMessage(newMessage);\n\n\t\tif (isDraw()) {\n\t\t\tconsole.log(\"Inside Draw\");\n\t\t\tsetMessage(\"Draw!\");\n\t\t} else if (checkWinner() != null) {\n\t\t\t//winner found\n\t\t\tconsole.log(\"Winner Found\");\n\t\t\tlet w = checkWinner();\n\t\t\tsetWinner(w);\n\n\t\t\tif (w === \"X\") setMessage(\"X is the Winner!\");\n\t\t\telse setMessage(\"O is the Winner\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<Board arr={vals} clickFunction={clickFunction} />\n\t\t\t</div>\n\t\t\t<h1>{message}</h1>\n\t\t</>\n\t);\n}\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./Components/Game\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}